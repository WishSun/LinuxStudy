命令:
	   man 手册（后面可以跟命令名，也可以是函数名）

       ls  默认查看当前目录下的所有文件
       ls  \ 查看根目录下的所有文件和目录
           bin  存放可执行程序
           cdroom 光驱所在目录
		   dev  设备文件
           etc  系统中的配置文件
		   home 是一个大家庭，包括多个用户的家目录
		   lib/lib64  动态库和静态库
		   mnt  U盘挂载目录
           opt  第三方目录
           proc 进程信息
           root 管理员root的家目录
           run 系统的运行信息
           sbin 系统程序信息
           usr  第三方的头文件和库
           log  日志信息和缓存信息
     
           ls -a 显示所有文件/目录信息（包括隐藏文件）: Linux中以.开头的文件就是隐藏文件
                 在桌面环境下 ctrl + +放大    
                 .  :当前路径
                 .. :上级路径
                 相对路径: 以当前路径为起始的路径信息。即相对于当前路径的路径信息
			     绝对路径: 以根目录开始的路径信息。
           ls -i 显示文件的编号(i_node结点编号,该编号系统唯一)。可以和a选项一起使用 即ls -ia 显示所有文件的编号
           ls -l 显示文件的详细信息
                 <1>. 文件类型(d: 目录；-: 普通文件)
                 <2>. 权限信息 r:可读权限  w:可写权限 x:可执行权限 -: 表示不具备权限
 							对于文件: 
                               第一个权限: 所属用户权限 
                               第二个权限: 这个用户的所属组权限
 							   第三个权限: 其他用户（除了之前两个的其他用户），也是第三方（一般不具备可执行权限）
 							对于目录: 
 							   第一个权限:是否可浏览目录
							   第二个权限:是否可创建或删除目录
 							   第三个权限:是否可以进入  
                 <3>. 文件连接数(普通文件通常是1)
                 <4>. 所属用户
                 <5>. 所属组
                 <6>. 文件大小(每一个目录大小都是4096, 一个数据块的大小)
           ls -d 不进入目录，只查看目录的信息

    查看当前所在路径
          pwd
    创建目录(可以在任何指定目录下创建目录)
          mkdir  
                -p 可以创建多级目录，即如果指定目录不存在，则都创建
    改变当前所在路径
          cd + 路径名
          cd ~ 进入家目录
          cd - 返回上次所在路径
    删除一个目录
          rmdir + 目录  (缺陷: 只能删除空目录)
          rm -r + 目录  可以删除目录(包含目录中的所有文件)
    移动一个文件或目录（类似于剪切功能）
          mv + 目标目录/文件 + 目的地路径
          注意：如果目的地路径不存在，则相当于改名字
	拷贝一个文件
	      cp + 目标文件 + 目的地路径
	拷贝一个目录
	      cp -r + 目标目录 + 目的地路径
          注意: 如果目的地路径不存在，则相当于创建一个以目的地路径为文件名的副本

    创建一个文件
          touch + 文件名 
          注意: 如果文件不存在，就创建这个文件；如果文件存在，则刷新它的最后修改时间
    查看当前日期
          date
    查看一个文件的内容(一次性显示完)
          顺序查看:
          cat + 文件名
          cat -n + 文件名 (给查看到的内容前面加上行号)
          倒序查看
    查看一个文件的内容(分页显示,按f或空格下翻一页, b向上翻一页)
          more + 文件名 (内容看完就退出了)
          less + 文件名 (内容看完不会退出，而且支持查找)
                : /+查找字符串 : 向下查找信息
		: ?+查找字符串 : 向上查找信息
    显示文件末尾的数据(默认显示文档的最后10行)
          tail + 文件名
          tail -n + 文件名  显示文档的最后n行
          tail -f + 文件名  动态显示文档的最后n行
    显示文件开头的数据    
          head 
    为文件创建软链接(符号链接,也叫快捷方式: 对软链接的操作与操作指向的实际文件相同。与实际文件的i_node编号不同)
          ln -s 目标文件名 软链接名
    为文件创建硬链接(与实际文件的i_node编号相同,即执行同一个i_node结点，只是文件名不同)
          ln  目标文件名 硬链接名

    硬链接和软链接的不同之处:
          删除原文件之后，硬链接仍可用(链接计数 - 1)，但软链接不可用。
          因为软链接针对的是目录项，而硬链接针对的是文件数据.相当于创建了一个共享
    系统默认的创建文件权限( 用三个数字表示，八进制表示）
          umask  可查看权限掩码 ,一般是002
          umask + 三位八进制数 : 修改掩码
          umask -S 显示创建权限
 	修改文件权限 
          chmod 权限值(三位八进制数字)  文件名
          chmod u-w 文件名  :  u代表用户，-代表去掉，w代表写权限，意思是去掉文件所属用户的写权限
                u 可以用 g、o代替，分别代表组用户、其他用户
                -代表去掉权限，+代表增加权限
                w 可以用r、x代替，分别代表读权限、可执行权限
          特殊: chmod +-x 文件名  给所有用户添加去掉可执行权限，而其他权限不可以
	修改文件所属用户
          chown +用户名 + 文件名
    打包命令
          压缩 : gzip hello.txt  生成hello.txt.gz的压缩文件，并将hello.txt删除
        解压缩:  gunzip hello.txt.gz  将hello.txt.gz解压为hello.txt

          压缩 : bzip2 hello.txt  生成hello.txt.bz2的压缩文件，并删除hello.txt删除
          解压缩: bunzip2 hello.txt.bz2  
  
          打包(不具备压缩) : tar -cf hello.tar  hello.txt  将hello.txt打包为hello.tar  -c 打包  -f 包名
          打包(具备压缩) : tar -czf hello.tar.gz  hello.txt  将hello.txt打包为hello.tar.gz(通过gzip压缩) -z 由gzip压缩
          打包(具备压缩) : tar -cjf hello.tar.bz2  hello.txt  将hello.txt打包为hello.tar.bz2(通过bzip2压缩) -j 由bzip2压缩
						     tar -czvf test3.tar.gz test3  -v 显示详细的打包或解包信息  
          解包(无压缩的) : tar -xf hello.tar      解包由gzip压缩的包, -x是解包
          解包(有压缩的) : tar -xzf hello.tar.gz  解包由gzip压缩的包, -x是解包
          解包(有压缩的) : tar -xjf hello.tar.bz2 解包由bzip2压缩的包

    查看进程信息
          ps -ef  查看所有进程信息
          
          STIME  : 启动时间
          TTY : 终端号
  
          ps aux 查看所有进程信息（更详细）
          ps aux -L 查看所有线程信息（更详细）
    查看当前终端号
          tty

	查看所有进程使用资源情况
    	  top 

	查找命令
          find  查找路径  -name "hello.txt"  以名称来查找文件
          find  查找路径  -name "hello*"  以名称前缀来查找文件 *是通配符
          find  查找路径  -size +5k   找5kB大小以上大小的文件
          find  查找路径  -size -5k   找5kB大小以内的文件
          find  查找路径  -mmin +30   找最后一次修改时间在30分钟以内的文件  -c文件更改时间  -a 访问时间 -m 内容修改时间
 																		+n n分钟以内  -n n分钟之前

    过滤命令
          grep "shenlan" /etc/passwd  过滤显示包含shenlan的文件
          grep -v "shenlan" /etc/passwd  过滤显示不包含shenlan的文件
          grep -i "shenlan" /etc/passwd  过滤显示包含shenlan的文件(忽略大小写)
    管道命令 |
         |之前的作为|之后的输入 
    打印到屏幕
         echo + 字符串
    重定向
         echo + 字符串 >> my.txt  将本输出到屏幕的信息重定向到my.txt
    重启
	 sudo reboot
    立即关机
         sudo shutdown -h now  sudo(为当前操作赋予root权限)



